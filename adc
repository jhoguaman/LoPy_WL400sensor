import machine
import math
import time
numADCreadings = const(100)

def ADCloopMeanStdDev():
    adc = machine.ADC(0)
    adcread = adc.channel(pin='P14',attn=adc.ATTN_11DB)    #ADC.ATTN_11DB
    samplesADC = [0.0]*numADCreadings; meanADC = 0.0
    i = 0
    while (i < numADCreadings):
        adcint = adcread()
        samplesADC[i] = adcint
        meanADC += adcint
        i += 1
    meanADC /= numADCreadings
    varianceADC = 0.0
    for adcint in samplesADC:
        varianceADC += (adcint - meanADC)**2
    varianceADC /= (numADCreadings - 1)
    meanADC=round(meanADC)
    StandardDeviation=math.sqrt(varianceADC)
    return meanADC, StandardDeviation

def waterLevel():
    i=0
    j=0
    avgADC = 0.0
    sADC = [0.0]*numADC

    while (i < numADC):
        time.sleep(0.1)
        meanADC,StandardDeviation= ADCloopMeanStdDev()
        if StandardDeviation<15:
            sADC[i] = meanADC
            avgADC += meanADC
            i += 1
        j += 1
        #if j==40:
        #    i=numADC
        print(j,i)
    avgADC /= numADC
    avgADC=round(avgADC)
    hx=round((avgADC-Vmin)/m)+hmin
    hxcm=round(hx/10)
    print('Vh: ',avgADC,'hx: ',hx,'[mm]',hxcm,'[cm]')


Vmin=655
hmin=40
h1=120
V1=706
m=(V1-Vmin)/(h1-hmin)
numADC=10


while True:
    waterLevel()
    time.sleep(10)
